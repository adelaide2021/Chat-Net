package node;

import java.io.Serializable;
import java.util.Objects;
// TODO: change jetbrains to com.sun.istack???(2)
import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;
import lombok.ToString;
import org.jetbrains.annotations.NotNull;
import lombok.Data;

@Data
@ToString
@AllArgsConstructor
@NoArgsConstructor
public class Node implements Comparable<Node>, Serializable {

    private static final long serialVersionUID = 1234567L;

    // userid is automatically generated by the database
    @NotNull
    protected Long userId;
    protected String userName;

    // is the leader node or not
    protected boolean isLeader;

    // the node hostname
    protected String hostname;

    // the node port
    protected int port;

    public Node getNode() {
        return this;
    }

    @Override
    public int compareTo(@NotNull Node o) {
        return userId.compareTo(o.getUserId());
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Node)) return false;
        Node node = (Node) o;
        return userId.equals(node.userId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(userId);
    }
}
